// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250617013617_updateVisiteur")]
    partial class updateVisiteur
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Evenement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEvenement")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrganisateurId")
                        .HasColumnType("bigint");

                    b.Property<int>("Participantes")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganisateurId");

                    b.ToTable("Evenements");
                });

            modelBuilder.Entity("api.Models.Organisateur", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("organisateurs");
                });

            modelBuilder.Entity("api.Models.Verification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Etat")
                        .HasColumnType("int");

                    b.Property<long?>("EvenementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("VisiteurId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EvenementId");

                    b.HasIndex("VisiteurId");

                    b.ToTable("Verifications");
                });

            modelBuilder.Entity("api.Models.Visiteur", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Visiteurs");
                });

            modelBuilder.Entity("api.Models.Evenement", b =>
                {
                    b.HasOne("api.Models.Organisateur", "Organisateur")
                        .WithMany("Evenements")
                        .HasForeignKey("OrganisateurId");

                    b.Navigation("Organisateur");
                });

            modelBuilder.Entity("api.Models.Verification", b =>
                {
                    b.HasOne("api.Models.Evenement", "Evenement")
                        .WithMany("Verifications")
                        .HasForeignKey("EvenementId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("api.Models.Visiteur", "Visiteur")
                        .WithMany("Verifications")
                        .HasForeignKey("VisiteurId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Evenement");

                    b.Navigation("Visiteur");
                });

            modelBuilder.Entity("api.Models.Evenement", b =>
                {
                    b.Navigation("Verifications");
                });

            modelBuilder.Entity("api.Models.Organisateur", b =>
                {
                    b.Navigation("Evenements");
                });

            modelBuilder.Entity("api.Models.Visiteur", b =>
                {
                    b.Navigation("Verifications");
                });
#pragma warning restore 612, 618
        }
    }
}
