name: dockercompose6520680682756091732
services:
  api:
    build:
      context: D:\FST\GI\Module_S4\CS\gestion invitation\api
      dockerfile: api/Dockerfile
    depends_on:
      db:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      DB_HOST: db
      DB_NAME: gestion_invitation
      DB_SA_PASSWORD: yassine@2003
    image: api
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "8081"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Dell\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Dell\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Dell\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Dell\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  db:
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
      SA_PASSWORD: yassine@2003
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: db_data
        target: /var/opt/mssql
        volume: {}
  frontend:
    build:
      context: D:\FST\GI\Module_S4\CS\gestion invitation\api\frontend
      dockerfile: Dockerfile
    depends_on:
      api:
        condition: service_started
        required: true
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "4200"
        protocol: tcp
networks:
  default:
    name: dockercompose6520680682756091732_default
volumes:
  db_data:
    name: dockercompose6520680682756091732_db_data